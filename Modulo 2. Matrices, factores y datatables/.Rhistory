library(readxl)
DatosPesca <- read_excel("C:/Users/jubeda2/Downloads/Curso R Basico/DatosPesca.xlsx")
View(DatosPesca)
str(DatosPesca)
home_file  = "~/Documents/GitHub/Curso-R-Basico/Modulo 2. Matrices, factores y datatables"
home_file
setwd("~/Documents/GitHub/Curso-R-Basico/Modulo 2. Matrices, factores y datatables")
setwd("~/Documents/GitHub/Curso-R-Basico/Modulo 2. Matrices, factores y datatables")
data_loc   = paste0(home_file,"/3. Datos/")
data_loc
file_path <- paste0(data_loc, "DatosPesca.xlsx")
file_path
home_file
data_loc
file_path
knitr::opts_chunk$set(message = FALSE,
warning = FALSE,
fig.align='center',
fig.height= 8,
fig.width=12
)
# ¿Cuántos valores NA hay por columna?
colSums(is.na(df))
# Definir la ruta del archivo
file_path <- paste0(data_loc, "DatosPesca.xlsx")
# Cargar el archivo Excel
df <- read_excel("~/Documents/GitHub/Curso-R-Basico/Modulo 2. Matrices, factores y datatables/3. Datos/DatosPesca.xlsx")
rm(list=ls())
#--------------ESPACIO DE TRABAJO Y RUTAS RELATIVAS---------------#
# Modificar por el path del directorio de trabajo
home_file  = "~/Documents/GitHub/Curso-R-Basico/Modulo 2. Matrices, factores y datatables"
data_loc   = paste0(home_file,"/3. Datos/")
#--------------PAQUETES NECESARIOS PARA EL CURSO---------------#
Packages = c("readxl", "kableExtra", "knitr")
# Instalar los paquetes que no estén instalados
ages)
rm(list=ls())
#--------------ESPACIO DE TRABAJO Y RUTAS RELATIVAS---------------#
# Modificar por el path del directorio de trabajo
home_file  = "~/Documents/GitHub/Curso-R-Basico/Modulo 2. Matrices, factores y datatables"
data_loc   = paste0(home_file,"/3. Datos/")
#--------------PAQUETES NECESARIOS PARA EL CURSO---------------#
Packages = c("readxl", "kableExtra", "knitr")
# Instalar los paquetes que no estén instalados
# Cargar los paquetes
lapply(Packages, library, character.only = TRUE)
# Definir la ruta del archivo
file_path <- paste0(data_loc, "DatosPesca.xlsx")
# Cargar el archivo Excel
df <- read_excel("~/Documents/GitHub/Curso-R-Basico/Modulo 2. Matrices, factores y datatables/3. Datos/DatosPesca.xlsx")
# Mostramos la estructura del dataset
cat("La estructura del conjunto de datos de pesqueros en la zona 27:\n\n")
str(df)
# ¿Cuántos valores NA hay por columna?
colSums(is.na(df))
is.na(df)
# ¿Cuántos valores NA hay por columna?
colSums(is.na(df[, "PesoConsumo"]))
# ¿Cuántos valores NA hay por columna?
colSums(is.na(df$PesoConsumo))
# ¿Cuántos valores NA hay por columna?
sum(is.na(df$PesoConsumo))
names(df)
# Verificamos las columnas del dataframe
cat("Columnas del dataframe original:\n")
# Eliminar columnas irrelevantes
col_norelevantes <- c("CodigoArteDC", "CODREG", "REP_MS", "TIPOREG",
"SUBTIPO", " TIPO SOLAPE", "YEAR_DC", "FleetSegment")
# Eliminar columnas irrelevantes
df <- subset(df, select = -col_norelevantes)
# Verificamos las columnas del dataframe
cat("Columnas del dataframe original:\n")
# Eliminar columnas irrelevantes
col_norelevantes <- c("CodigoArteDC", "CODREG", "REP_MS", "TIPOREG",
"SUBTIPO", "TIPO SOLAPE", "YEAR_DC", "FleetSegment")
# Eliminar columnas irrelevantes
df <- subset(df, select = -col_norelevantes)
# Verificamos las columnas del dataframe
cat("Columnas del dataframe original:\n")
# Eliminar columnas irrelevantes
col_norelevantes <- c("CodigoArteDC", "CODREG", "REP_MS", "TIPOREG",
"SUBTIPO", "TIPO SOLAPE", "YEAR_DC", "FleetSegment")
# Eliminar columnas irrelevantes
df <- df[, !names(df) %in% col_norelevantes]]
# Verificamos las columnas del dataframe
cat("Columnas del dataframe original:\n")
# Eliminar columnas irrelevantes
col_norelevantes <- c("CodigoArteDC", "CODREG", "REP_MS", "TIPOREG",
"SUBTIPO", "TIPO SOLAPE", "YEAR_DC", "FleetSegment")
# Eliminar columnas irrelevantes
df <- df[, !names(df) %in% col_norelevantes]
# Verificamos las columnas restantes
colnames(df) %>%
kable(caption = "Columnas del dataframe después de eliminar las irrelevantes:", "html") %>%
kable_styling(font_size = 12, full_width = TRUE)
head(df)
View(df)
names(df)
type(names(df))
class(names(df))
col_norelevantes]
col_norelevantes
df2 <- df[, names(df) %in% col_norelevantes]
df2
class(df$MONTH)
class(df$Marea)
sapply(df, class)
lapply(df, class)
lapply(df, class)
apply(df, 2 class)
apply(df, 2, class)
sapply(df, 2, class)
lapply(df, 2, class)
apply(df, 2, class)
apply(df, 2, unique)
apply(df, unique)
apply(df, 2, class)
head(df)
View(df)
duplicted(df)
duplicated(df)
sum(duplicated(df))
head(duplicated(df))
head(df)
df[duplicatd(df), ]
df[duplicated(df), ]
df[!duplicated(df), ]
df$PesoConsumo > 1500
df[df$PesoConsumo > 1500, ]
View(df)
df[df$PesoConsumo > 1500 & df$CFR == "ESP-TRP-02366520240101051651"]
df[df$PesoConsumo > 1500 & df$CFR == "ESP-TRP-02366520240101051651", ]
df[c(df$PesoConsumo > 1500 & df$CFR == "ESP-TRP-02366520240101051651"), ]
df[df$PesoConsumo > 1500 & df$CFR == "ESP-TRP-02366520240101051651", ]
df[df$PesoConsumo > 500 & df$CFR == "ESP-TRP-02366520240101051651", ]
df[df$CFR == "ESP-TRP-02366520240101051651", ]
df[df$CFR == 'ESP-TRP-02366520240101051651', ]
unique(df$CFR)
df[df$PesoConsumo > 500 & df$CFR == "IRL000I14607", ]
df[df$PesoConsumo > 500 & df$CFR == "IRL000I14607", "AÑO_CAPTURA"]
df[df$PesoConsumo > 500 & df$CFR == "IRL000I14607", c("AÑO_CAPTURA", "CFR"]
df_IRL <- df[df$PesoConsumo > 500 & df$CFR == "IRL000I14607", c("AÑO_CAPTURA", "CFR")]
df_IRL
df_IRL <- df[df$PesoConsumo > 500 & df$CFR == "IRL000I14607", -c("AÑO_CAPTURA", "CFR")]
df_IRL <- df[!df$PesoConsumo > 500 & df$CFR == "IRL000I14607", -c("AÑO_CAPTURA", "CFR")]
df[!df$PesoConsumo > 500 & df$CFR == "IRL000I14607", c("AÑO_CAPTURA", "CFR")]
df[!df$PesoConsumo > 500 & df$CFR == "IRL000I14607", !names(df) %in% c("AÑO_CAPTURA", "CFR")]
df[!df$PesoConsumo > 500 & df$CFR == "IRL000I14607", names(df) %in% c("AÑO_CAPTURA", "CFR")]
df$FechaCaptura
class(df$FechaCaptura)
df$FechaCaptura <- as.Date(df$FechaCaptura)
class(df$FechaCaptura)
df$FechaCaptura
df$AñoMes <- format(df$FechaCaptura, "%Y-%m")
df$AñoMes
df$DiaSemana <- weekdays(df$FechaCaptura)
df[, c("FechaCaptura", "AñoMes", "DiasSemana")]
names(df)
df[, c("FechaCaptura", "AñoMes", "DiaSemana")]
df$Region <- ifelse(grepl("27.7", df$Zona), "Atlántico Noroeste",
ifelse(grepl("27.8", df$Zona), "Atlántico Centro-Oeste", "Otra región"))
grepl("W", df$DiaSemana)
df[grepl("W", df$DiaSemana), ]
unique(df[grepl("W", df$DiaSemana), ])
unique(df$DiaSemana[grepl("W", df$DiaSemana)])
unique(df$DiaSemana)
df$DiaSemana
unique(df[grepl("W", df$DiaSemana), ])
df[grepl("W", df$DiaSemana), ]
df$Region <- ifelse(grepl("27.7", df$Zona), "Atlántico Noroeste",
ifelse(grepl("27.8", df$Zona), "Atlántico Centro-Oeste", "Otra región"))
df$Region <- ifelse(grepl("27,7", df$Zona), "Atlántico Noroeste", "Otra región")
df$Region
unique(df$Region)
unique(df$Zona)
df$Region <- ifelse(grepl("27.7", df$Zona), "Atlántico Noroeste",
ifelse(grepl("27.8", df$Zona), "Atlántico Centro-Oeste", "Otra región"))
unique(df$Region)
apply(df[, c(Zona, Region)], 2, unique)
apply(df[, c(zona, Region)], 2, unique)
unique(df$Zona)
apply(df[, c(Zona, Region)], 2, unique)
apply(df[, names(df) %in% c(Zona, Region)], 2, unique)
apply(df[, c("Zona", "Region")], 2, unique)
df$Region <- ifelse(grepl("27.7", df$Zona), "Atlántico Noroeste",
ifelse(grepl("27.8", df$Zona), "Atlántico Centro-Oeste", "Otra región"))
unique(df$CodigoArte)
grepl("ll", df$CodigoArte)
sum(grepl("ll", df$CodigoArte))
grepl("ll", df$CodigoArte, ignore.case = FALSE)
sum(grepl("ll", df$CodigoArte, ignore.case = FALSE))
sum(grepl("ll", df$CodigoArte, ignore.case = TRUE))
unique(df$CodigoArte)
df$CategoriaArte <- ifelse(grepl("ot", df$CodigoArte)), "Arrastre",
df$CategoriaArte <- ifelse(grepl("ot", df$CodigoArte, ignore.case = TRUE)), "Arrastre", ifelse(grepl("gn", df$CodigoArte, ignore.case = TRUE), "Enmalle", ifelse(grepl("ll", df$CodigoArte, ignore.case = TRUE), "Palangre"), "Otro Arte")
df$CategoriaArte <- ifelse(
grepl("ot", df$CodigoArte, ignore.case = TRUE), "Arrastre",
ifelse(
grepl("gn", df$CodigoArte, ignore.case = TRUE), "Enmalle",
ifelse(
grepl("ll", df$CodigoArte, ignore.case = TRUE), "Palangre",
"Otro Arte"
)
)
)
unique(df$CategoriaArte)
total_por_especie <- aggregate(df$PesoDesembarcadoVivoTotal,
by = list(Especie = df$AL3Especie),
FUN = sum, na.rm = TRUE)
total_por_especie
df
table(df$CodigoArte)
table(df$CategoriaArte)
table(df$CFR)
table(df$CODREG)
table(sort(df$CFR, decreasing = TRUE))
sort(table(df$CFR, decreasing = TRUE))
sort(table(df$CFR), decreasing = TRUE)
sort(aggregate(df$PesoDesembarcadoVivoTotal,
by = list(Especie = df$AL3Especie),
FUN = sum, na.rm = TRUE), decreasing = TRUE
)
agg <- aggregate(df$PesoDesembarcadoVivoTotal,
by = list(Especie = df$AL3Especie),
FUN = sum, na.rm = TRUE)
agg
names(agg)[2] <- "TotalPeso"
agg
agg[order(agg$TotalPeso, decreasing = TRUE), ]
barco <- c("Atún I", "Mar Azul", "Pesca Norte", "Océano V", "Costa Libre", "Delta Sur")
arte <- c("Palangre", "Arrastre", "Cerco", "Arrastre", "Palangre", "Cerco")
kg_desembarcados <- c(1200, 3400, 1500, 2200, 900, 1800)
zona_fao <- c("27.8.c", "27.8.c", "27.9.a", "27.9.a", "27.10.a", "27.10.a")
inspeccion <- c(TRUE, FALSE, TRUE, FALSE, TRUE, FALSE)
# Creamos el data frame
mareas_df <- data.frame(barco, arte, kg_desembarcados, zona_fao, inspeccion)
str(mareas_df)
