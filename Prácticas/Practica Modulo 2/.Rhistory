setwd("~/Documents/GitHub/Curso-R-Basico/Prácticas/Practica Modulo 2")
setwd("~/Documents/GitHub/Curso-R-Basico")
setwd("~/Documents/GitHub/Curso-R-Basico/Prácticas/Practica Modulo 2")
# Carga de datos
help("read.csv")
#--------------ESPACIO DE TRABAJO Y RUTAS RELATIVAS---------------#
# Modificar por el path del directorio de trabajo
home_path  = "~/Documents/GitHub/Curso-R-Basico"
data_loc   = paste0(home_file,"/Prácticas/Practica Modulo 2/")
home_path  = "~/Documents/GitHub/Curso-R-Basico"
data_loc   = paste0(home_path,"/Prácticas/Practica Modulo 2/")
file_path = paste0(data_loc, "datos_practica_modulo_2.csv")
# Carga de datos
help("read.csv")
df = read.csv(file_path)
home_path  = "~/Documents/GitHub/Curso-R-Basico"
data_loc   = paste0(home_path,"/Prácticas/Practica Modulo 2/")
file_path = paste0(data_loc, "PescaPacifico_Palangre_2005-13.csv")
# Carga de datos
help("read.csv")
df = read.csv(file_path)
df
help("read.csv")
list=ls()
rm(list=ls())
library(readxl)
PescaPacifico_Palangre_2005_13 <- read_excel("~/Documents/GitHub/Curso-R-Basico/Prácticas/Practica Modulo 2/PescaPacifico_Palangre_2005-13.xlsx")
View(PescaPacifico_Palangre_2005_13)
help("read.csv")
list=ls()
rm(list=ls())
df_csv = read.csv(file_path)
df_csv = read.csv(file_path_csv)
home_path  = "~/Documents/GitHub/Curso-R-Basico"
data_loc   = paste0(home_path,"/Prácticas/Practica Modulo 2/")
file_path_csv = paste0(data_loc, "PescaPacifico_Palangre_2005-13.csv")
file_path_xlsx = paste0(data_loc, "PescaPacifico_Palangre_2005-13.xlsx")
df_csv = read.csv(file_path_csv)
df
df
df_csv = read.csv(file_path_csv)
df_csv
df_csv = read.csv(file_path_csv, sep = ';')
df_csv
class(df_csv$PesoCapturadoTotal)
df_csv = read.csv(file_path_csv, sep = ';', dec = ',')
df_csv
class(df_csv$PesoCapturadoTotal)
sapply(df_csv, class)
sum(df_csv$peso, na.rm = TRUE) # Suma de la columna 'peso')
View(df_csv)
sum(df_csv$PesoDescartado, na.rm = TRUE) # Suma de la columna 'peso')
sapply(df_csv, unique) # Ver los valores únicos de cada columna)
# Cargar el archivo CSV
df_csv = read.csv(file_path_csv, sep = ';', dec = ',')
df_csv
# Cargar el archivo XLSX
library(readxl)
df_xlsx <- read_excel(file_path_xlsx)
str(df_csv)
duplicated(df)
duplicated(df_csv)
duplicated_rows <- duplicated(df_csv)
sum(duplicated_rows)
df_csv[duplicated_row, ]
df_csv[duplicated_rows, ]
sum(duplicated_rows)
df_csv[duplicated_rows, ]
view(df_csv[duplicated_rows, ])
df_csv_duplicates <- df_csv[duplicated_rows, ]
View(df_csv_duplicates)
df_csv_2 <- df_csv[!duplicated(df_csv), ]
colSums(is.na(df_csv_2) | df_csv_2 = "")
colSums(is.na(df_csv_2) | df_csv_2 == "")
colSums(is.na(df_csv_2) | df_csv_2 == "" | df_csv_2 == 0)
df_csv_2
str(df_csv_2)
df_csv$FechaSalida      <- as.Date(df_csv_2$FechaSalida, format = "%d/%m/%y")
df_csv$FechaSalida      <- as.Date(df_csv$FechaSalida, format = "%d/%m/%y")
df_csv$FechaRegreso     <- as.Date(df_csv$FechaRegreso, format = "%d/%m/%y")
df_csv$FechaDesembarque <- as.Date(df_csv$FechaDesembarque, format = "%d/%m/%y")
df_csv$FechaCaptura     <- as.Date(df_csv$FechaCaptura, format = "%d/%m/%y")
## 1.2 Identificación de duplicados
duplicated_rows <- duplicated(df_csv)
sum(duplicated_rows)
# Visualizar los duplicados
df_csv[duplicated_rows, ]
# Eliminamos duplicados
df_csv_2 <- df_csv[!duplicated(df_csv), ]
## 1.3. Identificar valores vacíos o nulos
# Detecta las columnas con valores vacíos o nulos en cada una de las columnas.
colSums(is.na(df_csv_2) | df_csv_2 == "" | df_csv_2 == 0)
# Elimina las columnas con más de 50 % de valores nulos o vacíos.
str(df_csv_2)
df_csv$FechaSalida      <- as.Date(df_csv$FechaSalida, format = "%d/%m/%Y")
df_csv$FechaRegreso     <- as.Date(df_csv$FechaRegreso, format = "%d/%m/%Y")
df_csv$FechaDesembarque <- as.Date(df_csv$FechaDesembarque, format = "%d/%m/%Y")
df_csv$FechaCaptura     <- as.Date(df_csv$FechaCaptura, format = "%d/%m/%Y")
str(df_csv)
porcentaje_nulos <- colMeans(is.na(df_csv_2) | df_csv_2 = "" | df_csv_2 == 0)
porcentaje_nulos <- colMeans(is.na(df_csv_2) | df_csv_2 = "" | df_csv_2 == 0)
porcentaje_nulos <- colMeans(is.na(df_csv_2) | df_csv_2 == "" | df_csv_2 == 0)
df_csv_2[, porcentaje_nulos <= 0.5]
colSums(is.na(df_csv_2) | df_csv_2 == "" | df_csv_2 == 0)
porcentaje_nulos <- colMeans(is.na(df_csv_2) | df_csv_2 == "" | df_csv_2 == 0)
df_csv_2[, porcentaje_nulos <= 0.5]
porcentaje_nulos <- colMeans(
is.na(df_csv_2) |
(df_csv_2 == "" & sapply(df_csv_2, is.character)[col(df_csv_2)]) |
(df_csv_2 == 0 & sapply(df_csv_2, is.numeric)[col(df_csv_2)])
)
# Eliminar columnas con más del 50% de valores nulos, vacíos o ceros
df_csv_2 <- df_csv_2[, porcentaje_nulos <= 0.5]
col(df_csv_2)
View(df_csv_duplicates)
View(df_csv_2)
home_path  = "~/Documents/GitHub/Curso-R-Basico"
data_loc   = paste0(home_path,"/Prácticas/Practica Modulo 2/")
file_path_csv = paste0(data_loc, "PescaPacifico_Palangre_2005-13.csv")
file_path_xlsx = paste0(data_loc, "PescaPacifico_Palangre_2005-13.xlsx")
# 1. Preparación del conjunto de datos
## 1.1 Cargar el archivo de datos
help("read.csv")
# Cargar el archivo CSV
df_csv = read.csv(file_path_csv, sep = ';', dec = ',')
df_csv
# Cargar el archivo XLSX
library(readxl)
df_xlsx <- read_excel(file_path_xlsx)
# Revision de la estructura con str()
str(df_csv)
# Conversion de columnas de fecha a Date
df_csv$FechaSalida      <- as.Date(df_csv$FechaSalida, format = "%d/%m/%Y")
df_csv$FechaRegreso     <- as.Date(df_csv$FechaRegreso, format = "%d/%m/%Y")
df_csv$FechaDesembarque <- as.Date(df_csv$FechaDesembarque, format = "%d/%m/%Y")
df_csv$FechaCaptura     <- as.Date(df_csv$FechaCaptura, format = "%d/%m/%Y")
## 1.2 Identificación de duplicados
duplicated_rows <- duplicated(df_csv)
sum(duplicated_rows)
# Visualizar los duplicados
df_csv[duplicated_rows, ]
# Eliminamos duplicados
df_csv_2 <- df_csv[!duplicated(df_csv), ]
## 1.3. Identificar valores vacíos o nulos
# Detecta las columnas con valores vacíos o nulos en cada una de las columnas.
colSums(is.na(df_csv_2) | df_csv_2 == "" | df_csv_2 == 0)
# Elimina las columnas con más de 50 % de valores nulos o vacíos.
# Solo contar NA, "", o 0 de forma segura
porcentaje_nulos <- colMeans(
is.na(df_csv_2) |
(df_csv_2 == "" & sapply(df_csv_2, is.character)[col(df_csv_2)]) |
(df_csv_2 == 0 & sapply(df_csv_2, is.numeric)[col(df_csv_2)])
)
# Eliminar columnas con más del 50% de valores nulos, vacíos o ceros
df_csv_3 <- df_csv_2[, porcentaje_nulos <= 0.5]
str(df_csv_3)
porcentaje_nulos
porcentaje_nulos <- colMeans(
is.na(df_csv_2) |
(df_csv_2 == "" & sapply(df_csv_2, is.character)[col(df_csv_2)]) |
(df_csv_2 == 0 & sapply(df_csv_2, is.numeric)[col(df_csv_2)])
)
porcentaje_nulos
is.numeric(df_csv_2$PuertoDesembarque)
df_csv_3 <- df_csv_2[, porcentaje_nulos <= 0.5]
df_csv_3 <- df_csv_2[, porcentaje_nulos >= 0.5]
df_csv_3
f_csv_3 <- df_csv_2[, porcentaje_nulos <= 0.5]
df_csv_3 <- df_csv_2[, porcentaje_nulos <= 0.5]
View(df_csv_3)
df_csv_3$HojaMarea
df_csv_3$HojaMarea
df_csv_3$hojamarea
names(df_csv_3)
names(df_csv_3) <- tolower(names(df_csv_3))
names(df_csv_3) <- toupper(names(df_csv_3))
df_csv_3
names(df_csv_3)
names(df_csv_3) <- tolower(names(df_csv_3))
df_csv_3
names(df_csv_3)
names(df_csv_3)
names(df_csv_3) <- c(
"año", "hojamarea", "idbuque",  "cfr", "buque",  "al3",
"especie", "peso", "zona", "fcsalida", "fcregreso", "fcdesembarque",
"fccaptura", "puertodesembarque"
)
names(df_csv_3)
df_csv_3 <- df_csv_2[, porcentaje_nulos <= 0.5]
names(df_csv_3) <- tolower(names(df_csv_3))
df_csv_3
# Eliminamos caracteres especiales
names(df_csv_3) <- c(
"ano", "hojamarea", "idbuque",  "cfr", "buque",  "al3",
"especie", "peso", "zona", "fcsalida", "fcregreso", "fcdesembarque",
"fccaptura", "puertodesembarque"
)
names(df_csv_3)
str(df_csv_3)
